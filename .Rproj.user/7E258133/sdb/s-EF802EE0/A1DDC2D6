{
    "contents" : "# Read in data\ntrainData = read.csv(\"train.csv\")\ntrainData2 = trainData \ntestData = read.csv(\"test.csv\")\ntestData2 = testData \n#Split into test and train\n\nset.seed(144)\nlibrary(caTools)\n\nsplit = sample.split(trainData$Happy, SplitRatio = 0.7)\n\ntrain = subset(trainData, split == TRUE)\ntrain2 = train \n\ntest = subset(trainData, split == FALSE)\ntest2 = test\n\n\nstr(test)\nsummary(test)\nnrow(test)\n\nstr(train)\nsummary(train)\nnrow(train)\n\n#Train Data pre-processing\n\n#Preporocess the data for missing vlaues\n#Replace all NA in YOB to median value\ntrain$YOB[is.na(train$YOB)]=median(train$YOB,na.rm=TRUE) \n\n#i=3  #Gender\n#i=4  #Income\n#i=5\t#HouseholdStatus\n#i=6\t#EducationLevel\n#i=7\t#Party\n#Substitute blank with Skipped\n#Iterate through the 3 to 7\nfor (i in names(train)) {\n    if ((i < 8) && (i > 2))\n    {\n    levels(train[,i]) <- c(levels(train[,i]), \"Skipped\")\n    train[,i][train[,i] == ''] <- 'Skipped'\n    }\n}\n\n#iterate thro 9 to end for the common vars\nfor (i in names(train)) {\n    if (i > 8)\n    {\n    levels(train[,i]) <- c(levels(train[,i]), \"Skipped\")\n    train[,i][train[,i] == ''] <- 'Skipped'\n    }\n}\n\n#removes redundant factor, which is earlier Blank\ntrain$Gender <- factor(train$Gender) \ntrain$Income <- factor(train$Income) \ntrain$HouseholdStatus <- factor(train$HouseholdStatus)\ntrain$EducationLevel <- factor(train$EducationLevel)\ntrain$Party <- factor(train$Party)\n\n#remvoes redundant factor\nfor (i in names(train)){\n      if (i > 8)\n    \t{\n\t\ttrain[,i] <- factor(train[,i])\n\t}\n}\n\n#Convert back to Integer/Take it from original \ntrain$Happy= as.integer(train2$Happy)\ntrain$UserID= as.integer(train2$UserID)\ntrain$YOB= as.integer(train2$YOB)\nstr(train)\n\n\n\n#Examine the data\nsummary(train$Income)\nstr(test)\nstr(train2)\ntrain$Gender\nsummary(train$Gender)\n\n\n\n#=======================================================\n#Test Data pre-processing\n\n#Preporocess the data for missing vlaues\n#Replace all NA in YOB to median value\ntest$YOB[is.na(test$YOB)]=median(test$YOB,na.rm=TRUE) \n\n#i=3  #Gender\n#i=4  #Income\n#i=5\t#HouseholdStatus\n#i=6\t#EducationLevel\n#i=7\t#Party\n#Substitute blank with Skipped\n#Iterate through the 3 to 7\nfor (i in names(test)) {\n    if ((i < 8) && (i > 2))\n    {\n    levels(test[,i]) <- c(levels(test[,i]), \"Skipped\")\n    test[,i][test[,i] == ''] <- 'Skipped'\n    }\n}\n\n#iterate thro 9 to end for the common vars\nfor (i in names(test)) {\n    if (i > 8)\n    {\n    levels(test[,i]) <- c(levels(test[,i]), \"Skipped\")\n    test[,i][test[,i] == ''] <- 'Skipped'\n    }\n}\n\n#removes redundant factor, which is earlier Blank\ntest$Gender <- factor(test$Gender) \ntest$Income <- factor(test$Income) \ntest$HouseholdStatus <- factor(test$HouseholdStatus)\ntest$EducationLevel <- factor(test$EducationLevel)\ntest$Party <- factor(test$Party)\n\n#remvoes redundant factor\nfor (i in names(test)){\n      if (i > 8)\n    \t{\n\t\ttest[,i] <- factor(test[,i])\n\t}\n}\n\n#Convert back to Integer/Take it from original \ntest$Happy= as.integer(test2$Happy)\ntest$UserID= as.integer(test2$UserID)\ntest$YOB= as.integer(test2$YOB)\nstr(test)\n\n\n#Examine the data\nsummary(test$Income)\nstr(test)\nstr(test2)\ntest$Gender\nsummary(test$Gender)\n========================================================================\n\n#Original Test Data pre-processing\n\n#Preporocess the data for missing vlaues\n#Replace all NA in YOB to median value\ntestData$YOB[is.na(testData$YOB)]=median(testData$YOB,na.rm=TRUE) \n\n#i=3  #Gender\n#i=4  #Income\n#i=5\t#HouseholdStatus\n#i=6\t#EducationLevel\n#i=7\t#Party\n#Substitute blank with Skipped\n#Iterate through the 3 to 7\nfor (i in names(testData)) {\n    if ((i < 8) && (i > 2))\n    {\n    levels(testData[,i]) <- c(levels(testData[,i]), \"Skipped\")\n    testData[,i][testData[,i] == ''] <- 'Skipped'\n    }\n}\n\n#iterate thro 9 to end for the common vars\nfor (i in names(testData)) {\n    if (i > 7)\n    {\n    levels(testData[,i]) <- c(levels(testData[,i]), \"Skipped\")\n    testData[,i][testData[,i] == ''] <- 'Skipped'\n    }\n}\n\n#removes redundant factor, which is earlier Blank\ntestData$Gender <- factor(testData$Gender) \ntestData$Income <- factor(testData$Income) \ntestData$HouseholdStatus <- factor(testData$HouseholdStatus)\ntestData$EducationLevel <- factor(testData$EducationLevel)\ntestData$Party <- factor(testData$Party)\n\n#remvoes redundant factor\nfor (i in names(testData)){\n      if (i > 7)\n    \t{\n\t\ttestData[,i] <- factor(testData[,i])\n\t}\n}\n\n#Convert back to Integer/Take it from original \n#testData$Happy= as.integer(testData2$Happy)\ntestData$UserID= as.integer(testData2$UserID)\ntestData$YOB= as.integer(testData2$YOB)\nstr(testData)\nnrow(testData)\n\n\n\n#Examine the data\nsummary(train$Income)\nstr(test)\nstr(train2)\ntrain$Gender\nsummary(train$Gender)\n===========================================================================\n\n#Original Train Data pre-processing\n\n#Preporocess the data for missing vlaues\n#Replace all NA in YOB to median value\ntrainData$YOB[is.na(trainData$YOB)]=median(trainData$YOB,na.rm=TRUE) \n\n#i=3  #Gender\n#i=4  #Income\n#i=5\t#HouseholdStatus\n#i=6\t#EducationLevel\n#i=7\t#Party\n#Substitute blank with Skipped\n#Iterate through the 3 to 7\nfor (i in names(trainData)) {\n    if ((i < 8) && (i > 2))\n    {\n    levels(trainData[,i]) <- c(levels(trainData[,i]), \"Skipped\")\n    trainData[,i][trainData[,i] == ''] <- 'Skipped'\n    }\n}\n\n#iterate thro 9 to end for the common vars\nfor (i in names(trainData)) {\n    if (i > 8)\n    {\n    levels(trainData[,i]) <- c(levels(trainData[,i]), \"Skipped\")\n    trainData[,i][trainData[,i] == ''] <- 'Skipped'\n    }\n}\n\n#removes redundant factor, which is earlier Blank\ntrainData$Gender <- factor(trainData$Gender) \ntrainData$Income <- factor(trainData$Income) \ntrainData$HouseholdStatus <- factor(trainData$HouseholdStatus)\ntrainData$EducationLevel <- factor(trainData$EducationLevel)\ntrainData$Party <- factor(trainData$Party)\n\n#remvoes redundant factor\nfor (i in names(trainData)){\n      if (i > 8)\n    \t{\n\t\ttrainData[,i] <- factor(trainData[,i])\n\t}\n}\n\n#Convert back to Integer/Take it from original \ntrainData$Happy= as.integer(trainData2$Happy)\ntrainData$UserID= as.integer(trainData2$UserID)\ntrainData$YOB= as.integer(trainData2$YOB)\nnrow(trainData)\nstr(trainData)\n\n\n\n#Examine the data\nsummary(trainData$Income)\nstr(test)\nstr(train2)\ntrain$Gender\nsummary(train$Gender)\n\n",
    "created" : 1421804713229.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1410962800",
    "id" : "A1DDC2D6",
    "lastKnownWriteTime" : 1398823470,
    "path" : "C:/info/Courseera/analy/project/AnalyticsEdge/datapreparation.R",
    "project_path" : "datapreparation.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}